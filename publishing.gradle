task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        release(MavenPublication) {
            from components.java

            groupId PUBLISH_GROUP_ID
            artifactId PUBLISH_ARTIFACT_ID
            version PUBLISH_VERSION

            artifact sourcesJar
            artifact javadocJar


            pom {
                name = PUBLISH_ARTIFACT_ID
                description =  'A JUnit5 extension test for embedded Redis'
                url = 'https://github.com/svt/junit5-redis-extension'

                licenses {
                    license {
                        name = "The Apache Software License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        distribution = "repo"
                    }
                }
                developers {
                    developer {
                        id = 'svtse'
                        name = "Sveriges Television AB"
                        organization  = "Sveriges Television AB"
                        organizationUrl = "https://www.svt.se/opensource/"
                        email = "opensource@svt.se"
                    }
                }

                scm {
                    connection = 'scm:git:github.com/svt/junit5-redis-extension.git'
                    developerConnection = 'scm:git:ssh://github.com/svt/junit5-redis-extension.git'
                    url = "https://github.com/svt/junit5-redis-extension/"
                }
            }
        }
    }

    repositories {
        maven {
            name = "mavencentral"
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"

            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }
}
signing {
    sign publishing.publications
}